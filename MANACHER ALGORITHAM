//MANACHER ALGORITHAM
class manacher {
public:
    vector<int> p;

    manacher(int n) {
        p.resize(2 * n + 1, 1);
    }

    void run_manacher(string &t) {
        int n = t.size();
        int l = 1, r = 1; // Start with l and r at 1

        for (int i = 1; i < n; i++) {
            if (i < r) {
                p[i] = min(r - i, p[l + r - i]);
            }
            while (i + p[i] < n && i - p[i] >= 0 && t[i + p[i]] == t[i - p[i]]) {
                p[i]++;
            }
            if (i + p[i] > r) {
                l = i - p[i];
                r = i + p[i];
            }
        }
    }

    void build(string &str) {
        string t;
        for (auto ele : str) {
            t.push_back('#');
            t.push_back(ele);
        }
        t.push_back('#');
        run_manacher(t);
    }

    int getLongest(int cen, bool odd) {
        int pos = 2 * cen + 1 + (!odd);
        return p[pos] - 1;
    }

    bool checkPalin(int l, int r) {
        if ((r - l + 1) <= getLongest((l + r) / 2, (l % 2 == r % 2))) {
            return true;
        }
        return false;
    }
};

